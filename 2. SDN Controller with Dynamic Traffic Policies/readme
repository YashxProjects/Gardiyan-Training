
Software-Defined Network (SDN) Controller with Dynamic Traffic Policies

Overview
This project implements a Lambda-based Software-Defined Networking (SDN) controller that dynamically manages cloud network security in response to real-time traffic events. By analyzing VPC Flow Logs, the controller enforces custom traffic control policies and modifies AWS security groups and network ACLs programmatically to block or allow traffic as needed.

Task Breakdown
1. VPC Flow Log Collection and Analysis
Use AWS Lambda to automatically ingest and analyze VPC Flow Logs for all monitored subnets or interfaces.

2. Custom Policy Definition in Python DSL
Define traffic control policies such as:
Automatically block unknown IPs attempting SSH (port 22) access.
Enforce source-based or time-based restrictions.
Policies are written in a flexible Python-based domain-specific language (DSL).

3. Dynamic Modification of Security Groups and NACLs
The Lambda controller uses AWS APIs to update security groups and network ACLs in real time based on policy evaluation outcomes.

4. Attack Simulation and Policy Testing
Simulate network intrusion attempts (e.g., port scans, unauthorized access) to validate policy accuracy and enforcement logic.

5. Audit Logging and Compliance Reporting
Generate structured audit logs and detailed compliance reports documenting:
Detected threats
Actions taken
Timestamps and affected resources

Tools and Technologies
Cloud Logging and Monitoring: AWS VPC Flow Logs, CloudWatch
Automation and Logic: AWS Lambda, Python
Security Enforcement: AWS Security Groups, Network ACLs
Reporting: CloudWatch Logs, custom log processing

